import streamlit as st
import openai
import base64
import tempfile
import fitz  # PyMuPDF

st.set_page_config(page_title="IA Contratos P칰blicos OCR", page_icon="游늯")
st.title("游늯 An치lisis Inteligente de Contratos de la Administraci칩n P칰blica")

st.markdown("""
Carga tu contrato p칰blico (PDF, escaneado o digital).  
La IA extrae y consolida los **elementos legales m치s importantes** del contrato, en formato estandarizado y comparativo para todos los casos.

**Necesitas tu clave de API de [OpenAI](https://platform.openai.com/api-keys)**
""")

st.warning(
    "丘멆잺 Esta app funciona con contratos PDF digitales (texto seleccionable) o escaneados (imagen). "
    "Si el PDF es digital, el an치lisis ser치 mucho m치s r치pido y barato. "
    "La extracci칩n de cifras y porcentajes es textual, sin modificar el formato, para m치xima precisi칩n."
)

api_key = st.text_input("Introduce tu clave OpenAI API", type="password")
uploaded_file = st.file_uploader("Sube tu contrato en PDF", type=["pdf"])

if uploaded_file and api_key:
    openai.api_key = api_key

    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp:
        tmp.write(uploaded_file.read())
        tmp_path = tmp.name

    st.info("Detectando tipo de PDF...")

    doc = fitz.open(tmp_path)
    is_digital = True
    digital_texts = []
    for page in doc:
        page_text = page.get_text("text")
        digital_texts.append(page_text)
        if len(page_text.strip()) < 30:
            is_digital = False

    st.success(f"Tipo de PDF detectado: {'Digital (texto seleccionable)' if is_digital else 'Escaneado (imagen)'}")

    all_texts = []
    progress_bar = st.progress(0)

    if is_digital:
        st.info("Extrayendo texto directamente (r치pido y barato)...")
        for i, page_text in enumerate(digital_texts):
            st.write(f"Procesando p치gina {i + 1} de {len(doc)} (digital)...")
            all_texts.append(page_text)
            progress_bar.progress((i+1)/len(doc))
    else:
        st.info("Convirtiendo p치ginas a imagen y usando IA Vision para OCR...")
        for i, page in enumerate(doc):
            st.write(f"Procesando p치gina {i + 1} de {len(doc)} (imagen)...")
            pix = page.get_pixmap(dpi=300)
            img_bytes = pix.tobytes("png")
            img_base64 = base64.b64encode(img_bytes).decode('utf-8')
            messages = [
                {"role": "system", "content": "Eres un experto en contratos p칰blicos y OCR legal."},
                {"role": "user", "content": [
                    {"type": "text", "text": (
                        "Lee la imagen adjunta de un contrato, extrae todo el texto 칰til y, si detectas informaci칩n de partes, objeto, monto, plazo, garant칤as, "
                        "obligaciones, penalizaciones, modificaciones, normatividad aplicable, resoluci칩n de controversias, firmas o anexos, ind칤calo claramente. "
                        "No agregues explicaciones, solo texto estructurado."
                    )},
                    {"type": "image_url", "image_url": {"url": f"data:image/png;base64,{img_base64}"}}
                ]}
            ]
            response = openai.chat.completions.create(
                model="gpt-4o",
                messages=messages,
                max_tokens=2048,
            )
            page_text = response.choices[0].message.content
            all_texts.append(page_text)
            progress_bar.progress((i+1)/len(doc))

    st.success("춰Extracci칩n completada!")

    with st.expander("Ver texto extra칤do de cada p치gina"):
        for idx, txt in enumerate(all_texts):
            st.markdown(f"**P치gina {idx+1}:**\n\n{txt}\n---")

    st.info("Consolidando elementos legales con IA...")

    full_text = "\n\n".join(all_texts)

    prompt_final = (
        "Eres un analista legal experto en contratos p칰blicos. "
        "Tienes el texto extra칤do de un contrato de la administraci칩n p칰blica mexicana. "
        "Debes presentar SIEMPRE la siguiente lista numerada, usando EXCLUSIVAMENTE los t칤tulos y el ORDEN proporcionado, en formato claro, formal, homog칠neo y f치cil de comparar, as칤:\n\n"
        "1. **Partes:** Enumera cada parte con nombre oficial, nombre completo y cargo de cada firmante. Agrupa por parte (por ejemplo: 'Por la Secretar칤a: ...; Por la empresa: ...').\n"
        "2. **Objeto:** Describe todos los servicios, bienes u obras exactos del contrato, uno por rengl칩n, sin resumir.\n"
        "3. **Monto:** Presenta as칤, SIEMPRE, cada l칤nea aparte, con separador de miles y MXN:\n"
        "   - Monto antes de IVA: $##,###,###.## MXN\n"
        "   - IVA: $##,###,###.## MXN\n"
        "   - Monto total: $##,###,###.## MXN\n"
        "   Si alguno falta, pon 'NO LOCALIZADO' en esa l칤nea. No uses otros formatos ni redacciones. No incluyas decimales innecesarios.\n"
        "4. **Plazo:** Expresa en formato: 'Inicio: [fecha]. Fin: [fecha]. Vigencia: [periodo].'\n"
        "5. **Garant칤as:** Lista tipo, porcentaje y condiciones de cada garant칤a; una por rengl칩n, usando el formato: 'Tipo: [tipo]. Porcentaje: [% o monto]. Condiciones: [condiciones].'\n"
        "6. **Obligaciones del Proveedor:** Lista TODAS las obligaciones espec칤ficas, una por rengl칩n, literal del contrato. No uses frases generales. No resumas ni combines en un solo p치rrafo.\n"
        "7. **Supervisi칩n:** Indica la(s) persona(s), 치rea(s) o dependencia(s) responsables. Un dato por rengl칩n.\n"
        "8. **Penalizaciones:** Lista cada penalizaci칩n, con monto/porcentaje y condici칩n, una por rengl칩n. Luego agrega la l칤nea 'Penalizaci칩n m치xima: [dato]'. Si no est치, pon 'NO LOCALIZADO'.\n"
        "9. **Modificaciones:** Indica el procedimiento, m치ximo permitido (% o monto), plazos y fundamento legal literal.\n"
        "10. **Normatividad Aplicable:** Lista todas las leyes, reglamentos, normas oficiales mexicanas y c칩digos citados en el contrato, cada uno en una l칤nea, sin abreviar ni resumir.\n"
        "11. **Resoluci칩n de Controversias:** Si NO hay procedimiento espec칤fico, inicia la l칤nea con 'NO LOCALIZADO.' y despu칠s copia cualquier menci칩n a jurisdicci칩n/tribunal.\n"
        "12. **Firmas:** Agrupa firmantes por parte, cada firmante en l칤nea aparte con nombre completo y cargo literal. Ejemplo: 'Por la Secretar칤a: Nombre, Cargo.'\n"
        "13. **Anexos:** Para cada anexo, pon el n칰mero, nombre y descripci칩n literal. Si s칩lo hay nombre, pon 'sin descripci칩n'.\n"
        "Usa negritas solo en t칤tulos. Presenta todas las listas, montos y campos en l칤neas separadas, nunca pegados ni mezclados. No escribas explicaciones, res칰menes, comentarios ni fusiones. El formato debe ser siempre igual para todos los contratos.\n\n"
        "Aqu칤 est치 el texto del contrato:\n\n"
        + full_text
    )

    response_final = openai.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "Eres un experto en contratos p칰blicos. Devuelve la lista estructurada, sin campos extra y siguiendo EXACTAMENTE los campos, formato, y nivel de detalle indicados."},
            {"role": "user", "content": prompt_final}
        ],
        max_tokens=4096,
    )
    resultado = response_final.choices[0].message.content

    st.success("춰An치lisis general completado!")
    st.markdown("### Lista consolidada de elementos legales (an치lisis general):")
    st.markdown(resultado)

    st.download_button(
        "Descargar an치lisis general (Markdown)",
        data=resultado,
        file_name="elementos_legales_contrato.md",
        mime="text/markdown"
    )
else:
    st.info("Sube un PDF y tu clave de OpenAI para comenzar.")
