import streamlit as st
import openai
import base64
import tempfile
import fitz  # PyMuPDF

st.set_page_config(page_title="IA Contratos P칰blicos OCR", page_icon="游늯")
st.title("游늯 An치lisis Inteligente de Contratos de la Administraci칩n P칰blica")

st.markdown("""
Carga tu contrato p칰blico (PDF, escaneado o digital).  
La IA extrae y consolida los **elementos legales m치s importantes** del contrato, en formato estandarizado y comparativo para todos los casos.

**Necesitas tu clave de API de [OpenAI](https://platform.openai.com/api-keys)**
""")

st.warning(
    "丘멆잺 Esta app funciona con contratos PDF digitales (texto seleccionable) o escaneados (imagen). "
    "Si el PDF es digital, el an치lisis ser치 mucho m치s r치pido y barato. "
    "La extracci칩n de cifras y porcentajes es textual, sin modificar el formato, para m치xima precisi칩n."
)

api_key = st.text_input("Introduce tu clave OpenAI API", type="password")
uploaded_file = st.file_uploader("Sube tu contrato en PDF", type=["pdf"])

if uploaded_file and api_key:
    openai.api_key = api_key

    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp:
        tmp.write(uploaded_file.read())
        tmp_path = tmp.name

    st.info("Detectando tipo de PDF...")

    doc = fitz.open(tmp_path)
    is_digital = True
    digital_texts = []
    for page in doc:
        page_text = page.get_text("text")
        digital_texts.append(page_text)
        if len(page_text.strip()) < 30:
            is_digital = False

    st.success(f"Tipo de PDF detectado: {'Digital (texto seleccionable)' if is_digital else 'Escaneado (imagen)'}")

    all_texts = []
    progress_bar = st.progress(0)

    if is_digital:
        st.info("Extrayendo texto directamente (r치pido y barato)...")
        for i, page_text in enumerate(digital_texts):
            st.write(f"Procesando p치gina {i + 1} de {len(doc)} (digital)...")
            all_texts.append(page_text)
            progress_bar.progress((i+1)/len(doc))
    else:
        st.info("Convirtiendo p치ginas a imagen y usando IA Vision para OCR...")
        for i, page in enumerate(doc):
            st.write(f"Procesando p치gina {i + 1} de {len(doc)} (imagen)...")
            pix = page.get_pixmap(dpi=300)
            img_bytes = pix.tobytes("png")
            img_base64 = base64.b64encode(img_bytes).decode('utf-8')
            messages = [
                {"role": "system", "content": "Eres un experto en contratos p칰blicos y OCR legal."},
                {"role": "user", "content": [
                    {"type": "text", "text": (
                        "Lee la imagen adjunta de un contrato, extrae todo el texto 칰til y, si detectas informaci칩n de partes, objeto, monto, plazo, garant칤as, "
                        "obligaciones, penalizaciones, modificaciones, normatividad aplicable, resoluci칩n de controversias, firmas o anexos, ind칤calo claramente. "
                        "No agregues explicaciones, solo texto estructurado."
                    )},
                    {"type": "image_url", "image_url": {"url": f"data:image/png;base64,{img_base64}"}}
                ]}
            ]
            response = openai.chat.completions.create(
                model="gpt-4o",
                messages=messages,
                max_tokens=2048,
            )
            page_text = response.choices[0].message.content
            all_texts.append(page_text)
            progress_bar.progress((i+1)/len(doc))

    st.success("춰Extracci칩n completada!")

    with st.expander("Ver texto extra칤do de cada p치gina"):
        for idx, txt in enumerate(all_texts):
            st.markdown(f"**P치gina {idx+1}:**\n\n{txt}\n---")

    st.info("Consolidando elementos legales con IA...")

    # Junta todos los textos y consolida
    full_text = "\n\n".join(all_texts)

    prompt_final = (
        "Eres un analista legal automatizado experto en contratos p칰blicos. "
        "A continuaci칩n tienes el texto relevante extra칤do de todas las p치ginas de un contrato de la administraci칩n p칰blica mexicana. "
        "Debes estructurar y presentar SIEMPRE la siguiente lista de elementos legales, usando EXCLUSIVAMENTE los t칤tulos y el ORDEN proporcionado abajo, con el siguiente formato: "
        "Numera los campos del 1 al 13, cada t칤tulo va en NEGRITAS (por ejemplo **Partes:**), seguido exactamente por el dato correspondiente. "
        "Si alg칰n elemento no existe en el contrato o no aparece expl칤citamente, escribe SOLO la leyenda 'NO LOCALIZADO' en ese campo (sin sin칩nimos, sin frases tipo 'no se encontr칩', 'no aplica', 'no especificado', etc). "
        "NO fusiones campos, NO repitas campos, NO agregues ejemplos, NO cambies el nombre ni el orden de los t칤tulos, NO hagas explicaciones, NO incluyas resumen final ni comentarios. "
        "No mezcles informaci칩n de diferentes campos; si hay varios datos, sep치ralos por punto y seguido. "
        "No pongas cargos en Firmas, solo los nombres. No incluyas definiciones. "
        "Escribe los montos y cifras exactamente como aparezcan, no los transformes ni los resumas. "
        "Aqu칤 el formato OBLIGATORIO, as칤 debe salir SIEMPRE, con los mismos t칤tulos y formato:\n\n"
        "1. **Partes:** [dato]\n"
        "2. **Objeto:** [dato]\n"
        "3. **Monto:** [dato]\n"
        "4. **Plazo:** [dato]\n"
        "5. **Garant칤as:** [dato]\n"
        "6. **Obligaciones del Proveedor:** [dato]\n"
        "7. **Supervisi칩n:** [dato]\n"
        "8. **Penalizaciones:** [dato]\n"
        "9. **Modificaciones:** [dato]\n"
        "10. **Normatividad Aplicable:** [dato]\n"
        "11. **Resoluci칩n de Controversias:** [dato]\n"
        "12. **Firmas:** [dato]\n"
        "13. **Anexos:** [dato]\n\n"
        "Ejemplo de respuesta:\n"
        "1. **Partes:** La Secretar칤a de Finanzas y Administraci칩n del Estado de Durango y la empresa Maquinaria y Edificaciones Doble G, S.A. de C.V. representada por C. Felipe de Jes칰s Garc칤a Avenda침o y C. Jonathan Moncada Galaviz.\n"
        "2. **Objeto:** Servicio de fumigaciones para diferentes dependencias.\n"
        "3. **Monto:** $48,368,544.21 despu칠s de impuestos.\n"
        "4. **Plazo:** Del 14 de junio de 2025 al 31 de diciembre de 2025.\n"
        "5. **Garant칤as:** Fianza por el 10% del importe total del contrato.\n"
        "6. **Obligaciones del Proveedor:** Cumplir con el servicio en tiempo y forma.\n"
        "7. **Supervisi칩n:** Direcci칩n de Servicios Generales de la Subsecretar칤a de Administraci칩n.\n"
        "8. **Penalizaciones:** Hasta 300 UMA's m치s IVA por d칤a de atraso.\n"
        "9. **Modificaciones:** Permitidas mediante acuerdo escrito entre las partes, hasta un 15% del total.\n"
        "10. **Normatividad Aplicable:** Ley de Adquisiciones, Arrendamientos y Servicios del Estado de Durango.\n"
        "11. **Resoluci칩n de Controversias:** Tribunales locales del Estado de Durango.\n"
        "12. **Firmas:** Pedro Josu칠 Herrera Parra. 칍scar Manuel V치zquez Pacheco. Felipe de Jes칰s Garc칤a Avenda침o. Jonathan Moncada Galaviz.\n"
        "13. **Anexos:** Anexo 1.\n\n"
        "Responde SOLO con la lista numerada exactamente en ese formato. Aqu칤 est치 el texto:\n\n"
        + full_text
    )

    response_final = openai.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "Eres un experto en contratos p칰blicos. Devuelve la lista estructurada y consolidada, sin duplicados, sin campos extra y siguiendo EXACTAMENTE los campos y el orden indicados."},
            {"role": "user", "content": prompt_final}
        ],
        max_tokens=4096,
    )
    resultado = response_final.choices[0].message.content

    st.success("춰An치lisis general completado!")
    st.markdown("### Lista consolidada de elementos legales (an치lisis general):")
    st.markdown(resultado)

    st.download_button(
        "Descargar an치lisis general (Markdown)",
        data=resultado,
        file_name="elementos_legales_contrato.md",
        mime="text/markdown"
    )
else:
    st.info("Sube un PDF y tu clave de OpenAI para comenzar.")
